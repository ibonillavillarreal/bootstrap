//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SisSegLT.Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SisSegDB : DbContext
    {
        public SisSegDB()
            : base("name=SisSegDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Ciudad> Ciudad { get; set; }
        public DbSet<ItemMenu> ItemMenu { get; set; }
        public DbSet<ItemRol> ItemRol { get; set; }
        public DbSet<Pais> Pais { get; set; }
        public DbSet<Sucursal> Sucursal { get; set; }
        public DbSet<Auditoria> Auditoria { get; set; }
        public DbSet<Clasificacion> Clasificacion { get; set; }
        public DbSet<Factor> Factor { get; set; }
        public DbSet<MatrizCalificacion> MatrizCalificacion { get; set; }
        public DbSet<Categoria> Categoria { get; set; }
        public DbSet<Metodologia> Metodologia { get; set; }
        public DbSet<AprobacionInstitucion> AprobacionInstitucion { get; set; }
        public DbSet<Contacto> Contacto { get; set; }
        public DbSet<DatosNegocio> DatosNegocio { get; set; }
        public DbSet<DocumentosNegocio> DocumentosNegocio { get; set; }
        public DbSet<Domicilio> Domicilio { get; set; }
        public DbSet<EvaluacionCategoria> EvaluacionCategoria { get; set; }
        public DbSet<EvaluacionCategoriaClasificacion> EvaluacionCategoriaClasificacion { get; set; }
        public DbSet<NegocioProveedores> NegocioProveedores { get; set; }
        public DbSet<ReferenciaCrediticia> ReferenciaCrediticia { get; set; }
        public DbSet<vwEvaluaciones> vwEvaluaciones { get; set; }
        public DbSet<ClienteEvaluacion> ClienteEvaluacion { get; set; }
        public DbSet<ResumenTransaccion> ResumenTransaccion { get; set; }
        public DbSet<DatosClienteImp> DatosClienteImp { get; set; }
        public DbSet<DetallePrestamosClienteImp> DetallePrestamosClienteImp { get; set; }
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<vwReferencias> vwReferencias { get; set; }
        public DbSet<vwExclusivoInstitucion> vwExclusivoInstitucion { get; set; }
        public DbSet<vwEvaluacionClienteCategoria> vwEvaluacionClienteCategoria { get; set; }
        public DbSet<vwEvaluacionCliente> vwEvaluacionCliente { get; set; }
        public DbSet<vwPICIngresados> vwPICIngresados { get; set; }
        public DbSet<vwPerfilesIngresados> vwPerfilesIngresados { get; set; }
        public DbSet<vwDatosNegocio> vwDatosNegocio { get; set; }
        public DbSet<vwResumenTransacciones> vwResumenTransacciones { get; set; }
        public DbSet<vwDatosGeneralesPerfil> vwDatosGeneralesPerfil { get; set; }
        public DbSet<vwPICIngresadosDetallados> vwPICIngresadosDetallados { get; set; }
        public DbSet<Profesion> Profesion { get; set; }
        public DbSet<tClienteCuenta> tClienteCuenta { get; set; }
        public DbSet<tEstadoCuentas> tEstadoCuentas { get; set; }
        public DbSet<tPlastico> tPlastico { get; set; }
        public DbSet<tTipoCuenta> tTipoCuenta { get; set; }
        public DbSet<Feriados> Feriados { get; set; }
        public DbSet<RutaCobroPrincipal> RutaCobroPrincipal { get; set; }
        public DbSet<Rol> Rol { get; set; }
        public DbSet<UsuarioRol> UsuarioRol { get; set; }
        public DbSet<OrigenFondos> OrigenFondos { get; set; }
        public DbSet<DestinoCredito> DestinoCredito { get; set; }
        public DbSet<DetalleCliente> DetalleCliente { get; set; }
        public DbSet<Empresas> Empresas { get; set; }
        public DbSet<Referencias> Referencias { get; set; }
        public DbSet<Reversion> Reversion { get; set; }
        public DbSet<RutaCobro> RutaCobro { get; set; }
        public DbSet<tFrecuencia> tFrecuencia { get; set; }
        public DbSet<TipoTransaccion> TipoTransaccion { get; set; }
        public DbSet<InformacionCheque> InformacionCheque { get; set; }
        public DbSet<Usuario> Usuario { get; set; }
        public DbSet<vw_DatosCredito3> vw_DatosCredito3 { get; set; }
        public DbSet<vw_DatosCredito> vw_DatosCredito { get; set; }
        public DbSet<vw_DatosCredito2> vw_DatosCredito2 { get; set; }
        public DbSet<tMovimientos> tMovimientos { get; set; }
        public DbSet<tVehiculos> tVehiculos { get; set; }
        public DbSet<tCredito> tCredito { get; set; }
        public DbSet<tDetallePago> tDetallePago { get; set; }
        public DbSet<vwDatosVehiculos> vwDatosVehiculos { get; set; }
        public DbSet<CargosMensuales> CargosMensuales { get; set; }
        public DbSet<tCuotas> tCuotas { get; set; }
        public DbSet<vw_CargosMensuales> vw_CargosMensuales { get; set; }
        public DbSet<vw_ListaCreditos> vw_ListaCreditos { get; set; }
        public DbSet<Barrios> Barrios { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<usuarios> usuarios { get; set; }
    
        public virtual ObjectResult<SP_DatosCliente_Result> SP_DatosCliente(Nullable<System.Guid> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DatosCliente_Result>("SP_DatosCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<SP_DatosDocumentosCliente_Result> SP_DatosDocumentosCliente(Nullable<System.Guid> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DatosDocumentosCliente_Result>("SP_DatosDocumentosCliente", idClienteParameter);
        }
    
        public virtual int SP_ImportacionMasiva(string tabla, string rutaCSV, string rutaXML)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var rutaCSVParameter = rutaCSV != null ?
                new ObjectParameter("RutaCSV", rutaCSV) :
                new ObjectParameter("RutaCSV", typeof(string));
    
            var rutaXMLParameter = rutaXML != null ?
                new ObjectParameter("RutaXML", rutaXML) :
                new ObjectParameter("RutaXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ImportacionMasiva", tablaParameter, rutaCSVParameter, rutaXMLParameter);
        }
    
        public virtual ObjectResult<SP_PlasticoLista_Result> SP_PlasticoLista(Nullable<System.Guid> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PlasticoLista_Result>("SP_PlasticoLista", idClienteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_MaximoNumeroMovimiento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_MaximoNumeroMovimiento");
        }
    
        public virtual ObjectResult<SP_CalculoCuotas_Result> SP_CalculoCuotas(Nullable<System.Guid> idMovimiento)
        {
            var idMovimientoParameter = idMovimiento.HasValue ?
                new ObjectParameter("IdMovimiento", idMovimiento) :
                new ObjectParameter("IdMovimiento", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CalculoCuotas_Result>("SP_CalculoCuotas", idMovimientoParameter);
        }
    
        public virtual ObjectResult<SP_EncabezadoEstadoCuenta_Result> SP_EncabezadoEstadoCuenta(string noCuenta)
        {
            var noCuentaParameter = noCuenta != null ?
                new ObjectParameter("NoCuenta", noCuenta) :
                new ObjectParameter("NoCuenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EncabezadoEstadoCuenta_Result>("SP_EncabezadoEstadoCuenta", noCuentaParameter);
        }
    
        public virtual ObjectResult<SP_EstadoCuenta_Result> SP_EstadoCuenta(Nullable<System.DateTime> fechai, Nullable<System.DateTime> fechaf, string nocuenta, string nocedula)
        {
            var fechaiParameter = fechai.HasValue ?
                new ObjectParameter("fechai", fechai) :
                new ObjectParameter("fechai", typeof(System.DateTime));
    
            var fechafParameter = fechaf.HasValue ?
                new ObjectParameter("fechaf",fechaf) :
                new ObjectParameter("fechaf", typeof(System.DateTime));
    
            var nocuentaParameter = nocuenta != null ?
                new ObjectParameter("nocuenta", nocuenta) :
                new ObjectParameter("nocuenta", typeof(string));
    
            var nocedulaParameter = nocedula != null ?
                new ObjectParameter("nocedula", nocedula) :
                new ObjectParameter("nocedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EstadoCuenta_Result>("SP_EstadoCuenta", fechaiParameter, fechafParameter, nocuentaParameter, nocedulaParameter);
        }
    
        public virtual ObjectResult<SP_CuotasPendientes_Result> SP_CuotasPendientes(Nullable<System.Guid> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CuotasPendientes_Result>("SP_CuotasPendientes", idClienteParameter);
        }
    
        public virtual ObjectResult<SP_EncabezadoEstadoCuentaxCedula_Result> SP_EncabezadoEstadoCuentaxCedula(string noCedula)
        {
            var noCedulaParameter = noCedula != null ?
                new ObjectParameter("NoCedula", noCedula) :
                new ObjectParameter("NoCedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EncabezadoEstadoCuentaxCedula_Result>("SP_EncabezadoEstadoCuentaxCedula", noCedulaParameter);
        }
    
        public virtual ObjectResult<SP_ListarRutaCobro_Result> SP_ListarRutaCobro(Nullable<System.DateTime> fecha, string colector)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var colectorParameter = colector != null ?
                new ObjectParameter("Colector", colector) :
                new ObjectParameter("Colector", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListarRutaCobro_Result>("SP_ListarRutaCobro", fechaParameter, colectorParameter);
        }
    
        public virtual ObjectResult<SP_ListarConcilicacionRecibo_Result> SP_ListarConcilicacionRecibo(Nullable<System.DateTime> fecha, string serie)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListarConcilicacionRecibo_Result>("SP_ListarConcilicacionRecibo", fechaParameter, serieParameter);
        }
    
        public virtual ObjectResult<SP_ListadeCobroXColector_Result> SP_ListadeCobroXColector(Nullable<System.DateTime> fecha, Nullable<System.Guid> idUsuario)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadeCobroXColector_Result>("SP_ListadeCobroXColector", fechaParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<SP_CreditoPorMes_Result> SP_CreditoPorMes(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CreditoPorMes_Result>("SP_CreditoPorMes", anioParameter);
        }
    
        public virtual ObjectResult<SP_RecuperacionPorMes_Result> SP_RecuperacionPorMes(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RecuperacionPorMes_Result>("SP_RecuperacionPorMes", anioParameter);
        }
    
        public virtual ObjectResult<SP_RecuperacionCarteraPorColector_Result> SP_RecuperacionCarteraPorColector(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string serie, Nullable<System.Guid> idUsuario)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RecuperacionCarteraPorColector_Result>("SP_RecuperacionCarteraPorColector", fechaInicioParameter, fechaFinParameter, serieParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<SP_ConsultaCodigoVehiculo_Result> SP_ConsultaCodigoVehiculo(string cod)
        {
            var codParameter = cod != null ?
                new ObjectParameter("Cod", cod) :
                new ObjectParameter("Cod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaCodigoVehiculo_Result>("SP_ConsultaCodigoVehiculo", codParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_DatosCredito_Result> SP_DatosCredito(string idMovimiento)
        {
            var idMovimientoParameter = idMovimiento != null ?
                new ObjectParameter("IdMovimiento", idMovimiento) :
                new ObjectParameter("IdMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DatosCredito_Result>("SP_DatosCredito", idMovimientoParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_EliminarDuplicados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarDuplicados");
        }
    
        public virtual ObjectResult<SP_EstadoCuenta1_Result> SP_EstadoCuenta1(Nullable<System.DateTime> fechai, Nullable<System.DateTime> fechaf, string nocuenta, string nocedula)
        {
            var fechaiParameter = fechai.HasValue ?
                new ObjectParameter("fechai", fechai) :
                new ObjectParameter("fechai", typeof(System.DateTime));
    
            var fechafParameter = fechaf.HasValue ?
                new ObjectParameter("fechaf", fechaf) :
                new ObjectParameter("fechaf", typeof(System.DateTime));
    
            var nocuentaParameter = nocuenta != null ?
                new ObjectParameter("nocuenta", nocuenta) :
                new ObjectParameter("nocuenta", typeof(string));
    
            var nocedulaParameter = nocedula != null ?
                new ObjectParameter("nocedula", nocedula) :
                new ObjectParameter("nocedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EstadoCuenta1_Result>("SP_EstadoCuenta1", fechaiParameter, fechafParameter, nocuentaParameter, nocedulaParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
